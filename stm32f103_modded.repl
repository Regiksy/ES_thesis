fsmcBank1: Memory.MappedMemory @ sysbus 0x60000000
    size: 0x10000000

sram: Memory.MappedMemory @ sysbus 0x20000000
    size: 0x10000000

flash: Memory.MappedMemory @ sysbus 0x00000000
    size: 0x20000000

usart1: UART.STM32_UART @ sysbus <0x40013800, +0x100>
    -> nvic@37

usart2: UART.STM32_UART @ sysbus <0x40004400, +0x100>
    -> nvic@38

usart3: UART.STM32_UART @ sysbus <0x40004800, +0x100>
    -> nvic@39

usart4: UART.STM32_UART @ sysbus <0x40004C00, +0x100>
    -> nvic@52

usart5: UART.STM32_UART @ sysbus <0x40005000, +0x100>
    -> nvic@53

nvic: IRQControllers.NVIC @ sysbus 0xE000E000
    priorityMask: 0xF0
    systickFrequency: 72000000
    IRQ -> cpu@0

cpu: CPU.CortexM @ sysbus
    cpuType: "cortex-m3"
    nvic: nvic

//Removes PCC warning, but still causes program to go to ErrorHandler,
//where it gets stuck.
/*
rtc: Timers.STM32F4_RTC @ sysbus 0x40002800
    AlarmIRQ -> nvic@41

rcc: Miscellaneous.STM32F4_RCC @ sysbus 0x4002100
    rtcPeripheral: rtc
*/



//Currently not working
/* 
rcc: Python.Peripheral @ sysbys 0x40021000
	size: 0x400
	initiable true
	script: '''
if request.init:
	lastVal = 0
else:
	if request.offset != 0x08:
		lastVal = 1 - lastVal
		request.value = lastVal * 0xFFFFFFFF
	else:
		lastVal = 1 - lastVal
		request.value = lastVal * 0xFFFFFFFA
		
self.NoisyLog("%s on FLIPFLOP at 0x%x, value 0x%x" % (str(request.type),request.offset, request.value))
''' 
*/

i2c1: I2C.STM32F4_I2C @ sysbus 0x40005400
    EventInterrupt -> nvic@31
    ErrorInterrupt -> nvic@32

i2c2: I2C.STM32F4_I2C @ sysbus 0x40005800
    EventInterrupt -> nvic@33
    ErrorInterrupt -> nvic@34

exti: IRQControllers.EXTI @ sysbus 0x40010400
    [0-6] -> nvic@[6-10, 23, 40]



gpioPortA: GPIOPort.STM32F1GPIOPort @ sysbus <0x40010800, +0x400>
    [0-15] -> exti@[0-15]
    //5 -> led@0

//LED: Miscellaneous.LED @ gpioPortA 5


   

gpioPortB: GPIOPort.STM32F1GPIOPort @ sysbus <0x40010C00, +0x400>
    [0-15] -> exti@[0-15]

gpioPortC: GPIOPort.STM32F1GPIOPort @ sysbus <0x40011000, +0x400>
    [0-15] -> exti@[0-15]

gpioPortD: GPIOPort.STM32F1GPIOPort @ sysbus <0x40011400, +0x400>
    [0-15] -> exti@[0-15]

gpioPortE: GPIOPort.STM32F1GPIOPort @ sysbus <0x40011800, +0x400>
    [0-15] -> exti@[0-15]

gpioPortF: GPIOPort.STM32F1GPIOPort @ sysbus <0x40011C00, +0x400>
    [0-15] -> exti@[0-15]

gpioPortG: GPIOPort.STM32F1GPIOPort @ sysbus <0x40012000, +0x400>
    [0-15] -> exti@[0-15]

//Not sure what this does
sysbus:
    init:
        ApplySVD @https://dl.antmicro.com/projects/renode/svd/STM32F103.svd.gz
        
        Tag <0x40021000, 0x40021003> "RCC_CR" 0x3030083 //Sets all OSC to ready, but not ON
        //Tag <0x40021000, 0x40021003> "RCC_CR" 0x01000083
        //0x0A020083 //Reset value for RCC_CR
